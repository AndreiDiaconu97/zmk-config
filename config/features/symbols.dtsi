/ {
  #define SYMBOL(NAME, SYMBOLS) \
    NAME: NAME { \
      compatible = "zmk,behavior-macro"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      wait-ms = <0>; \
      tap-ms = <0>; \
      bindings = <&macro_tap SYMBOLS>; \
    };

  #define SHIFTED_SYMBOL(NAME, UNSHIFTED, SHIFTED) \
    NAME: NAME { \
      compatible = "zmk,behavior-mod-morph"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      bindings = <UNSHIFTED>, <SHIFTED>; \
      mods = <(MOD_LSFT|MOD_RSFT)>; \
    };

  #define TAPHOLD_SYMBOL(NAME, TAP, HOLD) \
     NAME: NAME { \
      compatible = "zmk,behavior-hold-tap"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <2>; \
      tapping-term-ms = <TAPPING_TERM>; \
      flavor = "tap-preferred"; \
      quick-tap-ms = <QUICK_TAP_TERM>; \
      global-quick-tap; \
      bindings = <HOLD>, <TAP>; \
    };

  #define MODTAP_SYMBOL(NAME, BINDINGS, HOLD_TRIGGER_KEYS) \
     NAME: NAME { \
      compatible = "zmk,behavior-hold-tap"; \
      label = "HOMEROW_MOD"; \
      #binding-cells = <2>; \
      flavor = "balanced"; \
      tapping-term-ms = <180>; \
      quick-tap-ms = <175>; \
      global-quick-tap-ms = <150>; \
      hold-trigger-on-release; \
      bindings = <&sk>, <BINDINGS>; \
      hold-trigger-key-positions = <HOLD_TRIGGER_KEYS>; \
    };

  #define LAYERTAP_SYMBOL(NAME, BINDINGS) \
     NAME: NAME { \
      compatible = "zmk,behavior-hold-tap"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <2>; \
      tapping-term-ms = <0>; \
      flavor = "hold-preferred"; \
      retro-tap; \
      bindings = <&mo>, <BINDINGS>; \
    };

  #define MACRO_SYMBOL(NAME, SYMBOLS) \
    NAME: NAME { \
      compatible = "zmk,behavior-macro"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      wait-ms = <10>; \
      tap-ms = <10>; \
      bindings = <&macro_tap SYMBOLS>; \
    };

  #define TAPDANCE_SYMBOL(NAME, TAPHOLD, DTAP, TTAP) \
     NAME: NAME { \
      compatible = "zmk,behavior-tap-dance"; \
      label = ZMK_MACRO_STRINGIFY(NAME); \
      #binding-cells = <0>; \
      tapping-term-ms = <TD_TAPPING_TERM>; \
      bindings = <TAPHOLD>, <DTAP>, <TTAP>; \
    };

  symbols {

    SHIFTED_SYMBOL(mp_comma,   &kp COMMA, &kp SEMICOLON)
    SHIFTED_SYMBOL(mp_dot,     &kp DOT, &kp COLON)
    SHIFTED_SYMBOL(mp_bspc,    &kp BACKSPACE, &kp DELETE)
    SHIFTED_SYMBOL(mp_slash,   &kp SLASH, &kp BSLH)

    SHIFTED_SYMBOL(mp_n1,      &kp N1, &kp KP_N1)
    SHIFTED_SYMBOL(mp_n2,      &kp N2, &kp KP_N2)
    SHIFTED_SYMBOL(mp_n3,      &kp N3, &kp KP_N3)
    SHIFTED_SYMBOL(mp_n4,      &kp N4, &kp KP_N4)
    SHIFTED_SYMBOL(mp_n5,      &kp N5, &kp KP_N5)
    SHIFTED_SYMBOL(mp_n6,      &kp N6, &kp KP_N6)
    SHIFTED_SYMBOL(mp_n7,      &kp N7, &kp KP_N7)
    SHIFTED_SYMBOL(mp_n8,      &kp N8, &kp KP_N8)
    SHIFTED_SYMBOL(mp_n9,      &kp N9, &kp KP_N9)
    SHIFTED_SYMBOL(mp_n0,      &kp N0, &kp KP_N0)

    MODTAP_SYMBOL(th_n1,       &mp_n1, KEYS_R THUMBS)
    MODTAP_SYMBOL(th_n2,       &mp_n2, KEYS_R THUMBS)
    MODTAP_SYMBOL(th_n3,       &mp_n3, KEYS_R THUMBS)
    MODTAP_SYMBOL(th_n4,       &mp_n4, KEYS_R THUMBS)

    MODTAP_SYMBOL(th_n7,       &mp_n7, KEYS_L THUMBS)
    MODTAP_SYMBOL(th_n8,       &mp_n8, KEYS_L THUMBS)
    MODTAP_SYMBOL(th_n9,       &mp_n9, KEYS_L THUMBS)
    MODTAP_SYMBOL(th_n0,       &mp_n0, KEYS_L THUMBS)

    SYMBOL(mc_dqt,             &kp DQT)
    SYMBOL(mc_tilde,           &kp TILDE)
    SYMBOL(mc_bslh,            &kp BSLH)
    SYMBOL(mc_plus,            &kp PLUS)
    SYMBOL(mc_minus,           &kp MINUS)

    SYMBOL(mc_excl,            &kp EXCL)
    SYMBOL(mc_at,              &kp AT)
    SYMBOL(mc_hash,            &kp HASH)
    SYMBOL(mc_dllr,            &kp DLLR)
    SYMBOL(mc_prcnt,           &kp PRCNT)
    SYMBOL(mc_caret,           &kp CARET)
    SYMBOL(mc_amps,            &kp AMPS)
    SYMBOL(mc_star,            &kp STAR)
    SYMBOL(mc_qmark,           &kp QMARK)
    SYMBOL(mc_under,           &kp UNDER)

    LAYERTAP_SYMBOL(th_bspc,   &mp_bspc)
  };
};